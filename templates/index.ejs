<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>OCR App</title>

  <link href="/bootstrap.min.css" rel="stylesheet">
    
  <link href="/index.css"rel="stylesheet">
</head>

<body>
  <div class="container mt-5">
    <div class="row align-items-center">
  
      <div id="static" class="card col p-3 mx-3" style="height: 50vh;">
        <h1>Select Image</h1>
        <form id="uploader" enctype="multipart/form-data">
          <div class="input-group">
            <input class="form-control"  type="file" name="image" id="fileInput">
            <button class="btn btn-outline-primary" type="submit">Upload</button>
          </div>

        </form>

        <img id="preview" />
      </div>
      
      <div class="card col p-3 mx-3" style="height: 50vh;">
        <h1>OCR Result</h1>
        <div id="app"></div>
      </div> 

    </div>
  </div>

  <script src="/bootstrap.bundle.min.js"></script>

  <script>
    const App = () => {
      return `
        ${App.state.result}  
      `;
    }

    App.state = {
      result: "",
    };

    const setState = (name, value) => {
      App.state[name] = value;
      rerender();
    }

    const rerender = () => {
      document.getElementById('app').innerHTML = App();
    }

    const initialize = () => {
      const uploaderForm = document.getElementById('uploader');

      uploaderForm.onchange = (ev) => {
        document.getElementById('preview').src = URL.createObjectURL(ev.target.files[0]);
      };

      uploaderForm.onsubmit = async (ev) => {
        ev.preventDefault();

        const body = new FormData(uploaderForm);
        const response = await fetch("/recognize", { method: "POST", body });

        if (response) {
          const resBody = await response.json();
          setState('result', resBody.data.text);
        }
      };
    }

    initialize();
  </script>
</body>

</html>
